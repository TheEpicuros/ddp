---
name: codex-preflight
on:
  issues:
    types: [opened, edited]

permissions:
  contents: read
  issues: write

jobs:
  preflight:
    if: ${{ github.event.issue.pull_request == null }}
    runs-on: ubuntu-latest
    steps:
      - name: Read body safely
        id: cap
        run: |
          set -euo pipefail
          BODY="$(jq -r '.issue.body // empty' "$GITHUB_EVENT_PATH")"
          printf '%s' "$BODY" > body.json
          printf 'RAW_BYTES=%s\n' "$(wc -c < body.json)"
          head -c 120 body.json || true
          printf '\n'

      - name: Validate JSON
        id: jq
        run: |
          set -euo pipefail
          if jq -e . body.json >/dev/null 2>err.txt; then
            echo "valid=true" >> "$GITHUB_OUTPUT"
          else
            echo "valid=false" >> "$GITHUB_OUTPUT"
            echo "jq_error:"
            cat err.txt || true
          fi

      - name: Schema check
        if: steps.jq.outputs.valid == 'true'
        id: schema
        run: |
          set -euo pipefail
          # types
          jq -e '
            .path|type=="string" and
            .message|type=="string" and
            .title|type=="string" and
            .content_mode|type=="string" and
            .content|type=="string"
          ' body.json >/dev/null
          # path allowlist
          jq -e 'select(.path|startswith("codex/"))' body.json >/dev/null
          echo "ok=true" >> "$GITHUB_OUTPUT"

      - name: Patch body (minify) and add label
        if: steps.schema.outputs.ok == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          min=$(jq -c . body.json)
          gh api "repos/${{ github.repository }}/issues/${{ github.event.issue.number }}" -X PATCH -f body="$min"
          gh issue edit "${{ github.event.issue.number }}" -R "${{ github.repository }}" --add-label codex-ready

      - name: Comment diagnostics on failure
        if: steps.jq.outputs.valid != 'true' || steps.schema.outputs.ok != 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          bytes=$(wc -c < body.json)
          preview=$(head -c 200 body.json | sed -e 's/[^[:print:]\t]/?/g')
          jqerr=$(sed -e ':a;N;$!ba;s/\n/\\n/g' err.txt 2>/dev/null || true)
          gh api "repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments" \
            -f body=$'Preflight could not validate your JSON (or schema).\n\nDiagnostics:\n- BYTES_RAW='"$bytes"$'\n- PREVIEW='"$preview"$'\n- jq_error='"${jqerr:-ok}"$'\n'
