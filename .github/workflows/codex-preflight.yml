---
name: codex-preflight

# yamllint disable-next-line rule:truthy
on:
  issues:
    types:
      - opened
      - edited

permissions:
  contents: read
  issues: write

jobs:
  preflight:
    if: ${{ github.event.issue.pull_request == null }}
    runs-on: ubuntu-latest

    steps:
      - name: Capture body
        id: cap
        shell: bash
        run: |
          set -euo pipefail
          printf "%s" "${{ github.event.issue.body }}" > body.json
          echo "RAW_BYTES=$(wc -c < body.json)" >> "$GITHUB_OUTPUT"
          head -c 120 body.json || true
          echo

      - name: Validate JSON
        id: jq
        shell: bash
        run: |
          set -euo pipefail
          if jq -e . body.json >/dev/null 2>err.txt; then
            echo "valid=true" >> "$GITHUB_OUTPUT"
          else
            echo "valid=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Schema check
        if: steps.jq.outputs.valid == 'true'
        id: schema
        shell: bash
        run: |
          set -euo pipefail
          # required fields and allowlist for path
          jq -e ' .path|type=="string"
                   and .message|type=="string"
                   and .title|type=="string"
                   and .content_mode|type=="string"
                   and .content|type=="string" ' \
            body.json >/dev/null

          jq -e ' select(.path|startswith("codex/")) ' \
            body.json >/dev/null

          echo "ok=true" >> "$GITHUB_OUTPUT"

      - name: Patch body (minify) and add label
        if: steps.schema.outputs.ok == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          min=$(jq -c . body.json)
          gh api \
            repos/${{ github.repository }}/issues/${{ github.event.issue.number }} \
            -X PATCH -f body="$min"
          gh issue edit ${{ github.event.issue.number }} \
            -R "${{ github.repository }}" \
            --add-label codex-ready

      - name: Comment diagnostics on failure
        if: steps.jq.outputs.valid != 'true' || steps.schema.outputs.ok != 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          bytes=$(wc -c < body.json)
          preview=$(head -c 200 body.json \
            | sed -e 's/[^[:print:]\t]/?/g')
          jqerr=$(sed -e ':a;N;$!ba;s/\n/\\n/g' err.txt 2>/dev/null || true)
          gh api \
            repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            -f body=$'Preflight could not validate your JSON (or schema).\n\n'\
'Diagnostics:\n'\
"- BYTES_RAW=${bytes}\n"\
"- PREVIEW=${preview}\n"\
"- jq_error=${jqerr:-ok}\n"
