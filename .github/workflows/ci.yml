name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Detect package manager
        id: pm
        run: |
          if [ -f pnpm-lock.yaml ]; then echo "pm=pnpm" >> $GITHUB_OUTPUT; fi
          if [ -f package-lock.json ]; then echo "pm=npm" >> $GITHUB_OUTPUT; fi
          if [ -f yarn.lock ]; then echo "pm=yarn" >> $GITHUB_OUTPUT; fi
          if ! grep -q pm= $GITHUB_OUTPUT; then echo "pm=npm" >> $GITHUB_OUTPUT; fi

      - name: Setup pnpm (if used)
        if: steps.pm.outputs.pm == 'pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install deps
        run: |
          if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ]; then pnpm install --frozen-lockfile || pnpm install; fi
          if [ "${{ steps.pm.outputs.pm }}" = "npm" ]; then npm ci || npm i; fi
          if [ "${{ steps.pm.outputs.pm }}" = "yarn" ]; then yarn install --frozen-lockfile || yarn install; fi

      - name: Lint (best-effort)
        continue-on-error: true
        run: |
          if [ -f package.json ] && grep -q '"lint"' package.json; then \
            if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ] ; then pnpm run lint ; \
            elif [ "${{ steps.pm.outputs.pm }}" = "npm" ] ; then npm run lint ; \
            else yarn lint ; fi ; \
          else echo "No lint script" ; fi

      - name: Test (best-effort)
        continue-on-error: true
        run: |
          if [ -f package.json ] && grep -q '"test"' package.json; then \
            if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ] ; then pnpm test --if-present ; \
            elif [ "${{ steps.pm.outputs.pm }}" = "npm" ] ; then npm test --if-present ; \
            else yarn test ; fi ; \
          else echo "No test script" ; fi

      - name: Build (best-effort)
        continue-on-error: true
        run: |
          if [ -f package.json ] && grep -q '"build"' package.json; then \
            if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ] ; then pnpm run build --if-present ; \
            elif [ "${{ steps.pm.outputs.pm }}" = "npm" ] ; then npm run build --if-present ; \
            else yarn build ; fi ; \
          else echo "No build script" ; fi

      - name: Smoke script
        run: |
          chmod +x scripts/smoke.sh || true
          ./scripts/smoke.sh || echo "Smoke script not present or failed; continue"