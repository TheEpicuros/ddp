Actionlint-style findings

Workflow triggers only on issues events and excludes pull requests via the job-level if condition—appropriate for issue-based automation.

Permissions are least-privilege (contents: read, issues: write), matching required API calls.

No schema issues in on or if; all step IDs referenced correctly.

jq/bash portability issues

tr -d '\'` would remove both backticks and backslashes; revised line deletes only backticks.

Unused jq_ok variables and req assignment were removed to avoid confusion and potential shell warnings.

missing calculation now uses array subtraction, avoiding the prior has(.) misuse that always yielded an empty list.

Patch plan reasoning

Remove extra backslash so only backticks are stripped.

Drop unused variables (jq_ok, req) for cleaner logs and fewer shell subshells.

Fix missing-key detection to reliably report absent schema fields.

Simulated run paths

Body A (path outside codex/): steps through validation and schema check → PATH_OK=false → failure comment runs; patch/label steps skip.

Body B (path within codex/): schema passes → issue body patched to minified JSON and codex-ready label applied.

Post-run actions

On PASS: PATCH issue body to minified JSON and add codex-ready label.

On FAIL: Comment diagnostics including BYTES_RAW, PREVIEW, jq_error, schema_missing, path_startswith_codex.

Self-Critique
The review focuses on shell safety and schema validation, but no actionlint run was performed; running actionlint could catch additional YAML pitfalls.

scripts/smoke.sh failed due to a BOM or incompatible shebang; resolving that script would strengthen CI confidence.

Further hardening (e.g., limiting gh API outputs, verifying label existence) could reduce runtime surprises.
