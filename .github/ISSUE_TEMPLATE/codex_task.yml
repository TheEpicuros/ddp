name: Codex Task
description: Create/update files under codex/* with a strict JSON body and a target proof-line.
title: "codex: <short task>"
labels:
  - codex
body:
  - type: markdown
    attributes:
      value: |
        **Instructions**
        - Paste a single strict JSON object (no comments, no trailing commas).
        - All file paths **must** be under `codex/`.
        - Keep payload minimal. Codex or maintainers will open a PR.
        - The **preflight validator** adds `codex-ready` automatically after checks pass. Do **not** add it manually.

        **Minimal schema**
        ~~~json
        {
          "files": [
            {
              "path": "codex/<relative/path/to/file>",
              "op": "create|update",
              "content_type": "text|base64",
              "content": "<string>"
            }
          ],
          "proof_line": "SOME_PROOF=OK",
          "notes": "<optional short note>"
        }
        ~~~

  - type: textarea
    id: json
    attributes:
      label: Task JSON (strict)
      description: Paste one JSON object exactly as it should be processed.
      placeholder: |
        {
          "files": [
            {
              "path": "codex/example.txt",
              "op": "create",
              "content_type": "text",
              "content": "hello"
            }
          ],
          "proof_line": "EXAMPLE=OK",
          "notes": "short note"
        }
      render: text
    validations:
      required: true

  - type: checkboxes
    id: confirm
    attributes:
      label: Acknowledgements
      options:
        - label: I confirm the body is a single strict JSON object (no arrays/comments) and `jq -e .` would pass.
          required: true
        - label: I confirm all paths are under `codex/`.
          required: true
        - label: I understand the preflight validator will add `codex-ready` if checks pass.
          required: true
        - label: I understand a "no changes" outcome is valid and may return a proof-line indicating no updates were needed.
          required: true
